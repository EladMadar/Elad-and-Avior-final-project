name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: statuspage
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: statuspage_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:6.2-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django pytest-cov flake8
      
      - name: Lint with flake8
        run: |
          flake8 statuspage --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 statuspage --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Run tests
        env:
          DB_NAME: statuspage_test
          DB_USER: statuspage
          DB_PASSWORD: postgres
          DB_HOST: localhost
          DB_PORT: 5432
          REDIS_HOST: localhost
          REDIS_URL: redis://localhost:6379/0
          GITHUB_ACTIONS: true
          DJANGO_SETTINGS_MODULE: statuspage.settings
        run: |
          cd statuspage
          python manage.py collectstatic --noinput
          pytest --cov=. --cov-report=xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./statuspage/coverage.xml
          fail_ci_if_error: false

  # Add a job summary that reports the test status
  test-summary:
    name: Test Summary
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Send status to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() && env.SLACK_WEBHOOK_URL != null
